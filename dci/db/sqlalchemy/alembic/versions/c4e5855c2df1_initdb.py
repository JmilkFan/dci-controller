"""initdb

Revision ID: c4e5855c2df1
Revises: 
Create Date: 2022-02-23 02:30:55.411218

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c4e5855c2df1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sites',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=True),
    sa.Column('tf_api_server_host', sa.String(length=36), nullable=False),
    sa.Column('tf_api_server_port', sa.Integer(), nullable=False),
    sa.Column('tf_username', sa.String(length=36), nullable=False),
    sa.Column('tf_password', sa.String(length=36), nullable=False),
    sa.Column('os_auth_url', sa.String(length=36), nullable=True),
    sa.Column('os_region', sa.String(length=36), nullable=True),
    sa.Column('os_project_domain_name', sa.String(length=36), nullable=True),
    sa.Column('os_user_domain_name', sa.String(length=36), nullable=True),
    sa.Column('os_project_name', sa.String(length=36), nullable=True),
    sa.Column('os_username', sa.String(length=36), nullable=True),
    sa.Column('os_password', sa.String(length=36), nullable=True),
    sa.Column('state', sa.Enum('ACTIVE', 'INACTIVE'), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('wan_nodes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=True),
    sa.Column('vendor', sa.Enum('huawei'), nullable=False),
    sa.Column('netconf_host', sa.String(length=36), nullable=False),
    sa.Column('netconf_port', sa.Integer(), nullable=False),
    sa.Column('netconf_username', sa.String(length=36), nullable=False),
    sa.Column('netconf_password', sa.String(length=36), nullable=False),
    sa.Column('as_number', sa.Integer(), nullable=True),
    sa.Column('state', sa.Enum('ACTIVE', 'INACTIVE'), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('evpn_vpls_over_srv6_be_slicings',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=36), nullable=False),
    sa.Column('subnet_cidr', sa.String(length=36), nullable=False),
    sa.Column('state', sa.Enum('ACTIVE', 'INACTIVE'), nullable=False),
    sa.Column('east_site_uuid', sa.String(length=36), nullable=False),
    sa.Column('east_wan_node_uuid', sa.String(length=36), nullable=False),
    sa.Column('east_site_vn_uuid', sa.String(length=36), nullable=False),
    sa.Column('east_site_vn_vni', sa.Integer(), nullable=False),
    sa.Column('east_site_route_target', sa.Integer(), nullable=False),
    sa.Column('east_site_subnet_allocation_pool', sa.String(length=36), nullable=False),
    sa.Column('east_access_vpn_vni', sa.Integer(), nullable=False),
    sa.Column('east_access_vpn_route_target', sa.Integer(), nullable=False),
    sa.Column('east_access_vpn_route_distinguisher', sa.Integer(), nullable=False),
    sa.Column('east_wan_vpn_route_target', sa.Integer(), nullable=False),
    sa.Column('east_wan_vpn_route_distinguisher', sa.Integer(), nullable=False),
    sa.Column('east_access_vpn_bridge_domain', sa.Integer(), nullable=False),
    sa.Column('east_wan_vpn_bridge_domain', sa.Integer(), nullable=False),
    sa.Column('east_splicing_vlan_id', sa.Integer(), nullable=False),
    sa.Column('west_site_uuid', sa.String(length=36), nullable=False),
    sa.Column('west_wan_node_uuid', sa.String(length=36), nullable=False),
    sa.Column('west_site_vn_uuid', sa.String(length=36), nullable=False),
    sa.Column('west_site_subnet_allocation_pool', sa.String(length=36), nullable=False),
    sa.Column('west_site_vn_vni', sa.Integer(), nullable=False),
    sa.Column('west_site_route_target', sa.Integer(), nullable=False),
    sa.Column('west_access_vpn_vni', sa.Integer(), nullable=False),
    sa.Column('west_access_vpn_route_target', sa.Integer(), nullable=False),
    sa.Column('west_access_vpn_route_distinguisher', sa.Integer(), nullable=False),
    sa.Column('west_wan_vpn_route_target', sa.Integer(), nullable=False),
    sa.Column('west_wan_vpn_route_distinguisher', sa.Integer(), nullable=False),
    sa.Column('west_access_vpn_bridge_domain', sa.Integer(), nullable=False),
    sa.Column('west_wan_vpn_bridge_domain', sa.Integer(), nullable=False),
    sa.Column('west_splicing_vlan_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('evpn_vpls_over_srv6_be_slicings')
    op.drop_table('wan_nodes')
    op.drop_table('sites')
    # ### end Alembic commands ###
